/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Stop {
  
  @SerializedName("routeIdx")
  private String routeIdx = null;
  @SerializedName("arrDate")
  private Date arrDate = null;
  @SerializedName("depTime")
  private String depTime = null;
  @SerializedName("lon")
  private String lon = null;
  @SerializedName("depDate")
  private Date depDate = null;
  @SerializedName("track")
  private String track = null;
  @SerializedName("rtTrack")
  private String rtTrack = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("rtDepTime")
  private String rtDepTime = null;
  @SerializedName("rtArrTime")
  private String rtArrTime = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("arrTime")
  private String arrTime = null;
  @SerializedName("lat")
  private String lat = null;
  @SerializedName("rtDepDate")
  private Date rtDepDate = null;
  @SerializedName("rtArrDate")
  private Date rtArrDate = null;

  /**
   * Route index of a stop/station. Can be used as a reference of the stop/station in a journeyDetail response
   **/
  @ApiModelProperty(required = true, value = "Route index of a stop/station. Can be used as a reference of the stop/station in a journeyDetail response")
  public String getRouteIdx() {
    return routeIdx;
  }
  public void setRouteIdx(String routeIdx) {
    this.routeIdx = routeIdx;
  }

  /**
   * Arrival date in format YYYY-MM-DD, if available
   **/
  @ApiModelProperty(value = "Arrival date in format YYYY-MM-DD, if available")
  public Date getArrDate() {
    return arrDate;
  }
  public void setArrDate(Date arrDate) {
    this.arrDate = arrDate;
  }

  /**
   * Departure time in format HH:MM, if available
   **/
  @ApiModelProperty(value = "Departure time in format HH:MM, if available")
  public String getDepTime() {
    return depTime;
  }
  public void setDepTime(String depTime) {
    this.depTime = depTime;
  }

  /**
   * The WGS84 longitude
   **/
  @ApiModelProperty(required = true, value = "The WGS84 longitude")
  public String getLon() {
    return lon;
  }
  public void setLon(String lon) {
    this.lon = lon;
  }

  /**
   * Departure date in format YYYY-MM-DD, if available
   **/
  @ApiModelProperty(value = "Departure date in format YYYY-MM-DD, if available")
  public Date getDepDate() {
    return depDate;
  }
  public void setDepDate(Date depDate) {
    this.depDate = depDate;
  }

  /**
   * Track information, if available
   **/
  @ApiModelProperty(required = true, value = "Track information, if available")
  public String getTrack() {
    return track;
  }
  public void setTrack(String track) {
    this.track = track;
  }

  /**
   * Realtime track information, if available
   **/
  @ApiModelProperty(value = "Realtime track information, if available")
  public String getRtTrack() {
    return rtTrack;
  }
  public void setRtTrack(String rtTrack) {
    this.rtTrack = rtTrack;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Realtime departure time in format HH:MM if available
   **/
  @ApiModelProperty(value = "Realtime departure time in format HH:MM if available")
  public String getRtDepTime() {
    return rtDepTime;
  }
  public void setRtDepTime(String rtDepTime) {
    this.rtDepTime = rtDepTime;
  }

  /**
   * Realtime arrival time in format HH:MM if available
   **/
  @ApiModelProperty(value = "Realtime arrival time in format HH:MM if available")
  public String getRtArrTime() {
    return rtArrTime;
  }
  public void setRtArrTime(String rtArrTime) {
    this.rtArrTime = rtArrTime;
  }

  /**
   * Contains the name of the stop/station
   **/
  @ApiModelProperty(required = true, value = "Contains the name of the stop/station")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Arrival time in format HH:MM, if available
   **/
  @ApiModelProperty(value = "Arrival time in format HH:MM, if available")
  public String getArrTime() {
    return arrTime;
  }
  public void setArrTime(String arrTime) {
    this.arrTime = arrTime;
  }

  /**
   * The WGS84 latitude
   **/
  @ApiModelProperty(required = true, value = "The WGS84 latitude")
  public String getLat() {
    return lat;
  }
  public void setLat(String lat) {
    this.lat = lat;
  }

  /**
   * Realtime departure date in format YYYY-MM-DD, if available
   **/
  @ApiModelProperty(value = "Realtime departure date in format YYYY-MM-DD, if available")
  public Date getRtDepDate() {
    return rtDepDate;
  }
  public void setRtDepDate(Date rtDepDate) {
    this.rtDepDate = rtDepDate;
  }

  /**
   * Realtime arrival date in format YYYY-MM-DD, if available
   **/
  @ApiModelProperty(value = "Realtime arrival date in format YYYY-MM-DD, if available")
  public Date getRtArrDate() {
    return rtArrDate;
  }
  public void setRtArrDate(Date rtArrDate) {
    this.rtArrDate = rtArrDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Stop stop = (Stop) o;
    return (this.routeIdx == null ? stop.routeIdx == null : this.routeIdx.equals(stop.routeIdx)) &&
        (this.arrDate == null ? stop.arrDate == null : this.arrDate.equals(stop.arrDate)) &&
        (this.depTime == null ? stop.depTime == null : this.depTime.equals(stop.depTime)) &&
        (this.lon == null ? stop.lon == null : this.lon.equals(stop.lon)) &&
        (this.depDate == null ? stop.depDate == null : this.depDate.equals(stop.depDate)) &&
        (this.track == null ? stop.track == null : this.track.equals(stop.track)) &&
        (this.rtTrack == null ? stop.rtTrack == null : this.rtTrack.equals(stop.rtTrack)) &&
        (this.id == null ? stop.id == null : this.id.equals(stop.id)) &&
        (this.rtDepTime == null ? stop.rtDepTime == null : this.rtDepTime.equals(stop.rtDepTime)) &&
        (this.rtArrTime == null ? stop.rtArrTime == null : this.rtArrTime.equals(stop.rtArrTime)) &&
        (this.name == null ? stop.name == null : this.name.equals(stop.name)) &&
        (this.arrTime == null ? stop.arrTime == null : this.arrTime.equals(stop.arrTime)) &&
        (this.lat == null ? stop.lat == null : this.lat.equals(stop.lat)) &&
        (this.rtDepDate == null ? stop.rtDepDate == null : this.rtDepDate.equals(stop.rtDepDate)) &&
        (this.rtArrDate == null ? stop.rtArrDate == null : this.rtArrDate.equals(stop.rtArrDate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.routeIdx == null ? 0: this.routeIdx.hashCode());
    result = 31 * result + (this.arrDate == null ? 0: this.arrDate.hashCode());
    result = 31 * result + (this.depTime == null ? 0: this.depTime.hashCode());
    result = 31 * result + (this.lon == null ? 0: this.lon.hashCode());
    result = 31 * result + (this.depDate == null ? 0: this.depDate.hashCode());
    result = 31 * result + (this.track == null ? 0: this.track.hashCode());
    result = 31 * result + (this.rtTrack == null ? 0: this.rtTrack.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.rtDepTime == null ? 0: this.rtDepTime.hashCode());
    result = 31 * result + (this.rtArrTime == null ? 0: this.rtArrTime.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.arrTime == null ? 0: this.arrTime.hashCode());
    result = 31 * result + (this.lat == null ? 0: this.lat.hashCode());
    result = 31 * result + (this.rtDepDate == null ? 0: this.rtDepDate.hashCode());
    result = 31 * result + (this.rtArrDate == null ? 0: this.rtArrDate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Stop {\n");
    
    sb.append("  routeIdx: ").append(routeIdx).append("\n");
    sb.append("  arrDate: ").append(arrDate).append("\n");
    sb.append("  depTime: ").append(depTime).append("\n");
    sb.append("  lon: ").append(lon).append("\n");
    sb.append("  depDate: ").append(depDate).append("\n");
    sb.append("  track: ").append(track).append("\n");
    sb.append("  rtTrack: ").append(rtTrack).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  rtDepTime: ").append(rtDepTime).append("\n");
    sb.append("  rtArrTime: ").append(rtArrTime).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  arrTime: ").append(arrTime).append("\n");
    sb.append("  lat: ").append(lat).append("\n");
    sb.append("  rtDepDate: ").append(rtDepDate).append("\n");
    sb.append("  rtArrDate: ").append(rtArrDate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
