/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class StopLocation {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("lon")
  private String lon = null;
  @SerializedName("idx")
  private String idx = null;
  @SerializedName("weight")
  private String weight = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("track")
  private String track = null;
  @SerializedName("lat")
  private String lat = null;

  /**
   * This ID can either be used as originId or destId to perform a trip request or to call a departure  board
   **/
  @ApiModelProperty(required = true, value = "This ID can either be used as originId or destId to perform a trip request or to call a departure  board")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * The WGS84 longitude
   **/
  @ApiModelProperty(required = true, value = "The WGS84 longitude")
  public String getLon() {
    return lon;
  }
  public void setLon(String lon) {
    this.lon = lon;
  }

  /**
   * This index can be used to reorder the StopLocations and CoordLocations in JSON format response to their correct order. IN JSON you can receive two arrays, one for Stops and one for Addresses. This attribute is only contained in reponses to the location.name request. The location with idx=1 is the best fitting location
   **/
  @ApiModelProperty(required = true, value = "This index can be used to reorder the StopLocations and CoordLocations in JSON format response to their correct order. IN JSON you can receive two arrays, one for Stops and one for Addresses. This attribute is only contained in reponses to the location.name request. The location with idx=1 is the best fitting location")
  public String getIdx() {
    return idx;
  }
  public void setIdx(String idx) {
    this.idx = idx;
  }

  /**
   * This value specifies some kind of importance of this stop. The more traffic at this stop the higher the weight. The range is between 0 and 32767. This attribute is just contained in the location.allstops response
   **/
  @ApiModelProperty(value = "This value specifies some kind of importance of this stop. The more traffic at this stop the higher the weight. The range is between 0 and 32767. This attribute is just contained in the location.allstops response")
  public String getWeight() {
    return weight;
  }
  public void setWeight(String weight) {
    this.weight = weight;
  }

  /**
   * Contains the output name of this stop or station
   **/
  @ApiModelProperty(required = true, value = "Contains the output name of this stop or station")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Track information, if available
   **/
  @ApiModelProperty(value = "Track information, if available")
  public String getTrack() {
    return track;
  }
  public void setTrack(String track) {
    this.track = track;
  }

  /**
   * The WGS84 latitude
   **/
  @ApiModelProperty(required = true, value = "The WGS84 latitude")
  public String getLat() {
    return lat;
  }
  public void setLat(String lat) {
    this.lat = lat;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopLocation stopLocation = (StopLocation) o;
    return (this.id == null ? stopLocation.id == null : this.id.equals(stopLocation.id)) &&
        (this.lon == null ? stopLocation.lon == null : this.lon.equals(stopLocation.lon)) &&
        (this.idx == null ? stopLocation.idx == null : this.idx.equals(stopLocation.idx)) &&
        (this.weight == null ? stopLocation.weight == null : this.weight.equals(stopLocation.weight)) &&
        (this.name == null ? stopLocation.name == null : this.name.equals(stopLocation.name)) &&
        (this.track == null ? stopLocation.track == null : this.track.equals(stopLocation.track)) &&
        (this.lat == null ? stopLocation.lat == null : this.lat.equals(stopLocation.lat));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.lon == null ? 0: this.lon.hashCode());
    result = 31 * result + (this.idx == null ? 0: this.idx.hashCode());
    result = 31 * result + (this.weight == null ? 0: this.weight.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.track == null ? 0: this.track.hashCode());
    result = 31 * result + (this.lat == null ? 0: this.lat.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class StopLocation {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  lon: ").append(lon).append("\n");
    sb.append("  idx: ").append(idx).append("\n");
    sb.append("  weight: ").append(weight).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  track: ").append(track).append("\n");
    sb.append("  lat: ").append(lat).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
