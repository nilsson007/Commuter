/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Color {
  
  @SerializedName("bgColor")
  private String bgColor = null;
  @SerializedName("fgColor")
  private String fgColor = null;
  @SerializedName("stroke")
  private String stroke = null;

  /**
   * Backgroundcolor of this line
   **/
  @ApiModelProperty(required = true, value = "Backgroundcolor of this line")
  public String getBgColor() {
    return bgColor;
  }
  public void setBgColor(String bgColor) {
    this.bgColor = bgColor;
  }

  /**
   * Foregroundcolor of this line
   **/
  @ApiModelProperty(required = true, value = "Foregroundcolor of this line")
  public String getFgColor() {
    return fgColor;
  }
  public void setFgColor(String fgColor) {
    this.fgColor = fgColor;
  }

  /**
   * Stroke style of this line
   **/
  @ApiModelProperty(required = true, value = "Stroke style of this line")
  public String getStroke() {
    return stroke;
  }
  public void setStroke(String stroke) {
    this.stroke = stroke;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Color color = (Color) o;
    return (this.bgColor == null ? color.bgColor == null : this.bgColor.equals(color.bgColor)) &&
        (this.fgColor == null ? color.fgColor == null : this.fgColor.equals(color.fgColor)) &&
        (this.stroke == null ? color.stroke == null : this.stroke.equals(color.stroke));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.bgColor == null ? 0: this.bgColor.hashCode());
    result = 31 * result + (this.fgColor == null ? 0: this.fgColor.hashCode());
    result = 31 * result + (this.stroke == null ? 0: this.stroke.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Color {\n");
    
    sb.append("  bgColor: ").append(bgColor).append("\n");
    sb.append("  fgColor: ").append(fgColor).append("\n");
    sb.append("  stroke: ").append(stroke).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
