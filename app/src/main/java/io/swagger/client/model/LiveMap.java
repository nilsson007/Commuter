/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Vehicle;
import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class LiveMap {
  
  @SerializedName("time")
  private Date time = null;
  @SerializedName("maxx")
  private Double maxx = null;
  @SerializedName("maxy")
  private Double maxy = null;
  @SerializedName("vehicles")
  private List<Vehicle> vehicles = null;
  @SerializedName("minx")
  private Double minx = null;
  @SerializedName("miny")
  private Double miny = null;

  /**
   * Current server time
   **/
  @ApiModelProperty(required = true, value = "Current server time")
  public Date getTime() {
    return time;
  }
  public void setTime(Date time) {
    this.time = time;
  }

  /**
   * Right border (longitude) of the bounding box in WGS84 * 1000000
   **/
  @ApiModelProperty(required = true, value = "Right border (longitude) of the bounding box in WGS84 * 1000000")
  public Double getMaxx() {
    return maxx;
  }
  public void setMaxx(Double maxx) {
    this.maxx = maxx;
  }

  /**
   * Upper border (latitude) of the bounding box in WGS84 * 1000000
   **/
  @ApiModelProperty(required = true, value = "Upper border (latitude) of the bounding box in WGS84 * 1000000")
  public Double getMaxy() {
    return maxy;
  }
  public void setMaxy(Double maxy) {
    this.maxy = maxy;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public List<Vehicle> getVehicles() {
    return vehicles;
  }
  public void setVehicles(List<Vehicle> vehicles) {
    this.vehicles = vehicles;
  }

  /**
   * Left border (longitude) of the bounding box in WGS84 * 1000000
   **/
  @ApiModelProperty(required = true, value = "Left border (longitude) of the bounding box in WGS84 * 1000000")
  public Double getMinx() {
    return minx;
  }
  public void setMinx(Double minx) {
    this.minx = minx;
  }

  /**
   * Lower border (latitude) of the bounding box in WGS84 * 1000000
   **/
  @ApiModelProperty(required = true, value = "Lower border (latitude) of the bounding box in WGS84 * 1000000")
  public Double getMiny() {
    return miny;
  }
  public void setMiny(Double miny) {
    this.miny = miny;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LiveMap liveMap = (LiveMap) o;
    return (this.time == null ? liveMap.time == null : this.time.equals(liveMap.time)) &&
        (this.maxx == null ? liveMap.maxx == null : this.maxx.equals(liveMap.maxx)) &&
        (this.maxy == null ? liveMap.maxy == null : this.maxy.equals(liveMap.maxy)) &&
        (this.vehicles == null ? liveMap.vehicles == null : this.vehicles.equals(liveMap.vehicles)) &&
        (this.minx == null ? liveMap.minx == null : this.minx.equals(liveMap.minx)) &&
        (this.miny == null ? liveMap.miny == null : this.miny.equals(liveMap.miny));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.time == null ? 0: this.time.hashCode());
    result = 31 * result + (this.maxx == null ? 0: this.maxx.hashCode());
    result = 31 * result + (this.maxy == null ? 0: this.maxy.hashCode());
    result = 31 * result + (this.vehicles == null ? 0: this.vehicles.hashCode());
    result = 31 * result + (this.minx == null ? 0: this.minx.hashCode());
    result = 31 * result + (this.miny == null ? 0: this.miny.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LiveMap {\n");
    
    sb.append("  time: ").append(time).append("\n");
    sb.append("  maxx: ").append(maxx).append("\n");
    sb.append("  maxy: ").append(maxy).append("\n");
    sb.append("  vehicles: ").append(vehicles).append("\n");
    sb.append("  minx: ").append(minx).append("\n");
    sb.append("  miny: ").append(miny).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
