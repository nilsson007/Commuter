/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Vehicle {
  
  @SerializedName("lcolor")
  private String lcolor = null;
  public enum ProdClassEnum {
     VAS,  LDT,  REG,  BUS,  BOAT,  TRAM,  TAXI, 
  };
  @SerializedName("prodClass")
  private ProdClassEnum prodClass = null;
  @SerializedName("bcolor")
  private String bcolor = null;
  @SerializedName("direction")
  private Integer direction = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("gid")
  private String gid = null;
  @SerializedName("delay")
  private Integer delay = null;
  @SerializedName("y")
  private Double y = null;
  @SerializedName("x")
  private Double x = null;

  /**
   * Line color of the journey
   **/
  @ApiModelProperty(required = true, value = "Line color of the journey")
  public String getLcolor() {
    return lcolor;
  }
  public void setLcolor(String lcolor) {
    this.lcolor = lcolor;
  }

  /**
   * Product class
   **/
  @ApiModelProperty(required = true, value = "Product class")
  public ProdClassEnum getProdClass() {
    return prodClass;
  }
  public void setProdClass(ProdClassEnum prodClass) {
    this.prodClass = prodClass;
  }

  /**
   * Background color of the journey
   **/
  @ApiModelProperty(required = true, value = "Background color of the journey")
  public String getBcolor() {
    return bcolor;
  }
  public void setBcolor(String bcolor) {
    this.bcolor = bcolor;
  }

  /**
   * Direction of the vehicle. This is a value between 0 and 31 which is describing a direction vector
   **/
  @ApiModelProperty(required = true, value = "Direction of the vehicle. This is a value between 0 and 31 which is describing a direction vector")
  public Integer getDirection() {
    return direction;
  }
  public void setDirection(Integer direction) {
    this.direction = direction;
  }

  /**
   * Journey name
   **/
  @ApiModelProperty(required = true, value = "Journey name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Service GID
   **/
  @ApiModelProperty(required = true, value = "Service GID")
  public String getGid() {
    return gid;
  }
  public void setGid(String gid) {
    this.gid = gid;
  }

  /**
   * Current delay of the vehicle in minutes, can be negative, zero or positive
   **/
  @ApiModelProperty(required = true, value = "Current delay of the vehicle in minutes, can be negative, zero or positive")
  public Integer getDelay() {
    return delay;
  }
  public void setDelay(Integer delay) {
    this.delay = delay;
  }

  /**
   * Y coordinate (latitude) of the position in WGS84 * 1000000
   **/
  @ApiModelProperty(required = true, value = "Y coordinate (latitude) of the position in WGS84 * 1000000")
  public Double getY() {
    return y;
  }
  public void setY(Double y) {
    this.y = y;
  }

  /**
   * X coordinate (longitude) of the position in WGS84 * 1000000
   **/
  @ApiModelProperty(required = true, value = "X coordinate (longitude) of the position in WGS84 * 1000000")
  public Double getX() {
    return x;
  }
  public void setX(Double x) {
    this.x = x;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vehicle vehicle = (Vehicle) o;
    return (this.lcolor == null ? vehicle.lcolor == null : this.lcolor.equals(vehicle.lcolor)) &&
        (this.prodClass == null ? vehicle.prodClass == null : this.prodClass.equals(vehicle.prodClass)) &&
        (this.bcolor == null ? vehicle.bcolor == null : this.bcolor.equals(vehicle.bcolor)) &&
        (this.direction == null ? vehicle.direction == null : this.direction.equals(vehicle.direction)) &&
        (this.name == null ? vehicle.name == null : this.name.equals(vehicle.name)) &&
        (this.gid == null ? vehicle.gid == null : this.gid.equals(vehicle.gid)) &&
        (this.delay == null ? vehicle.delay == null : this.delay.equals(vehicle.delay)) &&
        (this.y == null ? vehicle.y == null : this.y.equals(vehicle.y)) &&
        (this.x == null ? vehicle.x == null : this.x.equals(vehicle.x));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.lcolor == null ? 0: this.lcolor.hashCode());
    result = 31 * result + (this.prodClass == null ? 0: this.prodClass.hashCode());
    result = 31 * result + (this.bcolor == null ? 0: this.bcolor.hashCode());
    result = 31 * result + (this.direction == null ? 0: this.direction.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.gid == null ? 0: this.gid.hashCode());
    result = 31 * result + (this.delay == null ? 0: this.delay.hashCode());
    result = 31 * result + (this.y == null ? 0: this.y.hashCode());
    result = 31 * result + (this.x == null ? 0: this.x.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vehicle {\n");
    
    sb.append("  lcolor: ").append(lcolor).append("\n");
    sb.append("  prodClass: ").append(prodClass).append("\n");
    sb.append("  bcolor: ").append(bcolor).append("\n");
    sb.append("  direction: ").append(direction).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  gid: ").append(gid).append("\n");
    sb.append("  delay: ").append(delay).append("\n");
    sb.append("  y: ").append(y).append("\n");
    sb.append("  x: ").append(x).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
