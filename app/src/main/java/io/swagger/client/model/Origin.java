/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Notes;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Origin {
  
  @SerializedName("routeIdx")
  private String routeIdx = null;
  @SerializedName("$")
  private String value = null;
  @SerializedName("cancelled")
  private Boolean cancelled = null;
  @SerializedName("track")
  private String track = null;
  @SerializedName("rtTrack")
  private String rtTrack = null;
  @SerializedName("type")
  private String type = null;
  @SerializedName("date")
  private Date date = null;
  @SerializedName("Notes")
  private Notes notes = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("rtDate")
  private Date rtDate = null;
  @SerializedName("time")
  private String time = null;
  @SerializedName("directdate")
  private Date directdate = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("rtTime")
  private String rtTime = null;
  @SerializedName("directtime")
  private String directtime = null;

  /**
   * Route index of a stop/station. Can be used as a reference of the stop/station in a journeyDetail response
   **/
  @ApiModelProperty(value = "Route index of a stop/station. Can be used as a reference of the stop/station in a journeyDetail response")
  public String getRouteIdx() {
    return routeIdx;
  }
  public void setRouteIdx(String routeIdx) {
    this.routeIdx = routeIdx;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getValue() {
    return value;
  }
  public void setValue(String value) {
    this.value = value;
  }

  /**
   * Will be set to true if departure/arrival at this stop is cancelled
   **/
  @ApiModelProperty(value = "Will be set to true if departure/arrival at this stop is cancelled")
  public Boolean getCancelled() {
    return cancelled;
  }
  public void setCancelled(Boolean cancelled) {
    this.cancelled = cancelled;
  }

  /**
   * Track information, if available
   **/
  @ApiModelProperty(value = "Track information, if available")
  public String getTrack() {
    return track;
  }
  public void setTrack(String track) {
    this.track = track;
  }

  /**
   * Realtime track information, if available
   **/
  @ApiModelProperty(value = "Realtime track information, if available")
  public String getRtTrack() {
    return rtTrack;
  }
  public void setRtTrack(String rtTrack) {
    this.rtTrack = rtTrack;
  }

  /**
   * The attribute type specifies the type of location. Valid values are ST (stop/station), ADR (address) or POI (point of interest)
   **/
  @ApiModelProperty(required = true, value = "The attribute type specifies the type of location. Valid values are ST (stop/station), ADR (address) or POI (point of interest)")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * Date in format YYYY-MM-DD
   **/
  @ApiModelProperty(required = true, value = "Date in format YYYY-MM-DD")
  public Date getDate() {
    return date;
  }
  public void setDate(Date date) {
    this.date = date;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Notes getNotes() {
    return notes;
  }
  public void setNotes(Notes notes) {
    this.notes = notes;
  }

  /**
   * ID of this stop
   **/
  @ApiModelProperty(value = "ID of this stop")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Realtime date in format YYYY-MM-DD, if available
   **/
  @ApiModelProperty(value = "Realtime date in format YYYY-MM-DD, if available")
  public Date getRtDate() {
    return rtDate;
  }
  public void setRtDate(Date rtDate) {
    this.rtDate = rtDate;
  }

  /**
   * Time in format HH:MM
   **/
  @ApiModelProperty(required = true, value = "Time in format HH:MM")
  public String getTime() {
    return time;
  }
  public void setTime(String time) {
    this.time = time;
  }

  /**
   * Date in format YYYY-MM-DD.  Based on the direct travel time
   **/
  @ApiModelProperty(value = "Date in format YYYY-MM-DD.  Based on the direct travel time")
  public Date getDirectdate() {
    return directdate;
  }
  public void setDirectdate(Date directdate) {
    this.directdate = directdate;
  }

  /**
   * Contains the name of the location
   **/
  @ApiModelProperty(required = true, value = "Contains the name of the location")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Realtime time in format HH:MM if available
   **/
  @ApiModelProperty(value = "Realtime time in format HH:MM if available")
  public String getRtTime() {
    return rtTime;
  }
  public void setRtTime(String rtTime) {
    this.rtTime = rtTime;
  }

  /**
   * Direct Time format HH:MM. Based on the direct travel time
   **/
  @ApiModelProperty(value = "Direct Time format HH:MM. Based on the direct travel time")
  public String getDirecttime() {
    return directtime;
  }
  public void setDirecttime(String directtime) {
    this.directtime = directtime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Origin origin = (Origin) o;
    return (this.routeIdx == null ? origin.routeIdx == null : this.routeIdx.equals(origin.routeIdx)) &&
        (this.value == null ? origin.value == null : this.value.equals(origin.value)) &&
        (this.cancelled == null ? origin.cancelled == null : this.cancelled.equals(origin.cancelled)) &&
        (this.track == null ? origin.track == null : this.track.equals(origin.track)) &&
        (this.rtTrack == null ? origin.rtTrack == null : this.rtTrack.equals(origin.rtTrack)) &&
        (this.type == null ? origin.type == null : this.type.equals(origin.type)) &&
        (this.date == null ? origin.date == null : this.date.equals(origin.date)) &&
        (this.notes == null ? origin.notes == null : this.notes.equals(origin.notes)) &&
        (this.id == null ? origin.id == null : this.id.equals(origin.id)) &&
        (this.rtDate == null ? origin.rtDate == null : this.rtDate.equals(origin.rtDate)) &&
        (this.time == null ? origin.time == null : this.time.equals(origin.time)) &&
        (this.directdate == null ? origin.directdate == null : this.directdate.equals(origin.directdate)) &&
        (this.name == null ? origin.name == null : this.name.equals(origin.name)) &&
        (this.rtTime == null ? origin.rtTime == null : this.rtTime.equals(origin.rtTime)) &&
        (this.directtime == null ? origin.directtime == null : this.directtime.equals(origin.directtime));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.routeIdx == null ? 0: this.routeIdx.hashCode());
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    result = 31 * result + (this.cancelled == null ? 0: this.cancelled.hashCode());
    result = 31 * result + (this.track == null ? 0: this.track.hashCode());
    result = 31 * result + (this.rtTrack == null ? 0: this.rtTrack.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.date == null ? 0: this.date.hashCode());
    result = 31 * result + (this.notes == null ? 0: this.notes.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.rtDate == null ? 0: this.rtDate.hashCode());
    result = 31 * result + (this.time == null ? 0: this.time.hashCode());
    result = 31 * result + (this.directdate == null ? 0: this.directdate.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.rtTime == null ? 0: this.rtTime.hashCode());
    result = 31 * result + (this.directtime == null ? 0: this.directtime.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Origin {\n");
    
    sb.append("  routeIdx: ").append(routeIdx).append("\n");
    sb.append("  value: ").append(value).append("\n");
    sb.append("  cancelled: ").append(cancelled).append("\n");
    sb.append("  track: ").append(track).append("\n");
    sb.append("  rtTrack: ").append(rtTrack).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  date: ").append(date).append("\n");
    sb.append("  notes: ").append(notes).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  rtDate: ").append(rtDate).append("\n");
    sb.append("  time: ").append(time).append("\n");
    sb.append("  directdate: ").append(directdate).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  rtTime: ").append(rtTime).append("\n");
    sb.append("  directtime: ").append(directtime).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
