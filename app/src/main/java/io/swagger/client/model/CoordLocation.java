/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class CoordLocation {
  
  @SerializedName("lon")
  private String lon = null;
  @SerializedName("idx")
  private String idx = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("type")
  private String type = null;
  @SerializedName("lat")
  private String lat = null;

  /**
   * The WGS84 longitude
   **/
  @ApiModelProperty(required = true, value = "The WGS84 longitude")
  public String getLon() {
    return lon;
  }
  public void setLon(String lon) {
    this.lon = lon;
  }

  /**
   * This index can be used to reorder the StopLocations and CoordLocations in JSON format response to their correct order. IN JSON you can receive two arrays, one for Stops and one for Addresses. This attribute is only contained in reponses to the location.name request. The location with idx=1 is the best fitting location.
   **/
  @ApiModelProperty(required = true, value = "This index can be used to reorder the StopLocations and CoordLocations in JSON format response to their correct order. IN JSON you can receive two arrays, one for Stops and one for Addresses. This attribute is only contained in reponses to the location.name request. The location with idx=1 is the best fitting location.")
  public String getIdx() {
    return idx;
  }
  public void setIdx(String idx) {
    this.idx = idx;
  }

  /**
   * Contains the output name of the address or point of interest
   **/
  @ApiModelProperty(required = true, value = "Contains the output name of the address or point of interest")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * The attribute type specifies the type of location. Valid values are ADR (address) or POI (point of interest). This attribute can be used to do some sort of classification in the user interface. For later trip requests it does not have any meaning.
   **/
  @ApiModelProperty(required = true, value = "The attribute type specifies the type of location. Valid values are ADR (address) or POI (point of interest). This attribute can be used to do some sort of classification in the user interface. For later trip requests it does not have any meaning.")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * The WGS84 latitude
   **/
  @ApiModelProperty(required = true, value = "The WGS84 latitude")
  public String getLat() {
    return lat;
  }
  public void setLat(String lat) {
    this.lat = lat;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoordLocation coordLocation = (CoordLocation) o;
    return (this.lon == null ? coordLocation.lon == null : this.lon.equals(coordLocation.lon)) &&
        (this.idx == null ? coordLocation.idx == null : this.idx.equals(coordLocation.idx)) &&
        (this.name == null ? coordLocation.name == null : this.name.equals(coordLocation.name)) &&
        (this.type == null ? coordLocation.type == null : this.type.equals(coordLocation.type)) &&
        (this.lat == null ? coordLocation.lat == null : this.lat.equals(coordLocation.lat));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.lon == null ? 0: this.lon.hashCode());
    result = 31 * result + (this.idx == null ? 0: this.idx.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.lat == null ? 0: this.lat.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoordLocation {\n");
    
    sb.append("  lon: ").append(lon).append("\n");
    sb.append("  idx: ").append(idx).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  lat: ").append(lat).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
